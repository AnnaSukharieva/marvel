{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","View","thumnailStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","_props$char","accordionState","onAccordion","CharInfo","accordion","setAccordion","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","CharSearchForm","result","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","MainPage","selectedChar","Helmet","position","top","zIndex","decoration"],"mappings":"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","file":"static/js/5.90f116d6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img src={img} alt=\"Error\" style={{display:'block', width:'250px',height:'250px', objectFit:'contain', margin:'0 auto'}}/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;\r\n\r\n// process.env.PUBLIC_URL + '/error.gif' pull out the img from the public folder","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=ad1bd53a6136ab25e9ea6d9a5275f445\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n const getCharacterByName = async (name) => {\r\n   const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n   return res.data.results.map(_transformCharacter);\r\n };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? `${char.description.slice(0, 210)}...`\r\n        : \"There is no description for this character\",\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    clearError,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterByName,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError }\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState(null);\r\n\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => updateChar(), [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} /> : null\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br />\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n    let thumnailStyle = { 'objectFit': 'cover' }\r\n    if (thumbnail.slice(-23) === 'image_not_available.jpg') {\r\n        thumnailStyle = { 'objectFit': 'contain' }\r\n    }\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={thumnailStyle} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description ? `${char.description.slice(0, 210)}...` : 'There is no information about the character.'}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\nimport PropTypes from 'prop-types'; // ES6\r\n\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(291);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(ended);\r\n    }\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }    \r\n\r\n    // Этот метод создан для оптимизации, \r\n    // чтобы не помещать такую конструкцию в метод render\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = { 'objectFit': 'cover' };\r\n            if (item.thumbnail.slice(-23) === 'image_not_available.jpg') {\r\n                imgStyle = { 'objectFit': 'unset' };\r\n            }\r\n\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        // А эта конструкция вынесена для центровки спиннера/ошибки\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading  ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'; // ES6\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const [accordion, setAccordion] = useState(false);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [props.charId])\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const { charId } = props\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const onAccordion = () => {\r\n        setAccordion(accordion => !accordion)\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton />\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} onAccordion={onAccordion} accordionState={accordion} /> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = (props) => {\r\n\r\n    const { name, description, thumbnail, homepage, wiki, comics } = props.char;\r\n\r\n    let thumnailStyle = { 'objectFit': 'cover' }\r\n    if (thumbnail.slice(-23) === 'image_not_available.jpg') {\r\n        thumnailStyle = { 'objectFit': 'contain' }\r\n    }\r\n\r\n    const listItems = (arr) => {\r\n        return arr.map((item, i) => {\r\n            // eslint-disable-next-line\r\n            if (i > 9) return;\r\n            return (\r\n                <li key={i} className={props.accordionState ? 'char__comics-item' : 'char__comics-hiddenitem'}>\r\n                    {item.name}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={thumnailStyle} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description ? description : 'There is no information about the character.'}\r\n            </div>\r\n\r\n            <button className={props.accordionState ? 'char__accordion char__accordion-opened' : 'char__accordion'} onClick={props.onAccordion}>\r\n                Comics:\r\n            </button>\r\n\r\n            <ul className='char__comics-list'>\r\n                {comics.length > 0 ? null : 'There are no comsics with this character'}\r\n                {listItems(comics)}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\t// static getDerivedStateFromError(error) {\r\n\t// \treturn { error: true };\r\n\t// }\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage/>\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import \"./charSearchForm.scss\";\r\nimport { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  console.log(char);\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n\r\n    getCharacterByName(name).then((char) => setChar(char));\r\n  };\r\n\r\n    const errorMessage = error ? (\r\n      <div className=\"char__search-critical-error\">\r\n        <ErrorMessage />\r\n      </div>\r\n    ) : null;\r\n\r\n  const result = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {char[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/characters/${char[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div className=\"char__search-error\">\r\n      The character was not found. Check the name and try again\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{\r\n          charName: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={(value) => updateChar(value.charName)}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button type=\"submit\" className=\"button button__main\">\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {result}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Marvel information portal\" />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <div style={{ position: \"sticky\", top: \"25px\", zIndex: \"3\" }}>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n          </ErrorBoundary>\r\n          <ErrorBoundary>\r\n            <CharSearchForm charId={selectedChar} />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}